version: "3"

networks:
  screenbit_tier:
    driver: bridge


services:
  # postgres database container
  db:
    container_name: screenbit_db
    image: postgres:latest
    env_file:
      - ".env"
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    restart: always
    networks:
      - screenbit_tier

  # redis cashing
  redis:
    container_name: screenbit_redis
    command: ["redis-server", "--appendonly", "yes"]
    image: redis:latest
    env_file:
      - ".env"
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis-data:/data
    depends_on:
      - db
    restart: always
    networks:
      - screenbit_tier

  # memcached
  memcached:
    container_name: screenbit_memcached
    image: memcached:latest
    command: ["-m", "512m"]
    expose:
      - "11211"
    depends_on:
      - redis
    restart: always
    networks:
      - screenbit_tier

  # screenbit api container
  api:
    container_name: screenbit_api
    env_file:
      - '.env'
    build:
      context: ./screenbitApi/
      dockerfile: Dockerfile
    volumes:
      - ./screenbitApi:/usr/src/screenbitApi
      - ./server_media:/usr/src/screenbitApi/server_media
      - ${SSL_CERTIFICATE_DIR}:/etc/ssl/certs/:ro
    ports:
      # Developement
      - "${SCREENBIT_API_PORT}:${SCREENBIT_API_PORT}"

      # apache2
      # - "${SCREENBIT_API_PORT}:80"
    depends_on:
      - memcached
    restart: always
    networks:
      - screenbit_tier

  rabbitmq_broker:
    container_name: screenbit_rabbit
    image: rabbitmq:latest
    env_file:
      - '.env'
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_DEFAULT_VHOST}"
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
    restart: on-failure:5
    networks:
      - screenbit_tier

  worker:
     container_name: statistics_worker
     build:
       context: ./statistics_celery/
       dockerfile: Dockerfile
     command: ["celery", "-A", "my_tasks", "worker", "--loglevel=DEBUG", "--beat"]
     env_file:
       - '.env'
     volumes:
       - ./statistics_celery:/usr/src/statistics_celery
     environment:
       RABBITMQ_HOST: "${RABBITMQ_DEFAULT_VHOST}"
       RABBITMQ_PORT: "${RABBITMQ_PORT}"
       CELERY_USERNAME: ${RABBITMQ_DEFAULT_USER}
       CELERY_PASSWORD: ${RABBITMQ_DEFAULT_PASS}
     depends_on:
       - rabbitmq_broker
     restart: on-failure:5
     networks:
       - screenbit_tier
